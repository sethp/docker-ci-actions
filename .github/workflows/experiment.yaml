# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

      - name: setup macOS
        if: startsWith(matrix.os, 'macos')
        run: |
          sysctl kern.hv_support
        
          brew install --cask --no-quarantine docker
          
          sudo /bin/mkdir -p /Library/PrivilegedHelperTools
          sudo /bin/cp /Applications/Docker.app/Contents/Library/LaunchServices/com.docker.vmnetd /Library/PrivilegedHelperTools/
          # TODO: Get the com.docker.vmnetd.plist out of the binary somehow?
          cat <<EOF | sudo tee /Library/LaunchDaemons/com.docker.vmnetd.plist >/dev/null
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
                  <key>Label</key>
                  <string>com.docker.vmnetd</string>
                  <key>Program</key>
                  <string>/Library/PrivilegedHelperTools/com.docker.vmnetd</string>
                  <key>ProgramArguments</key>
                  <array>
                          <string>/Library/PrivilegedHelperTools/com.docker.vmnetd</string>
                  </array>
                  <key>RunAtLoad</key>
                  <true/>
                  <key>Sockets</key>
                  <dict>
                          <key>Listener</key>
                          <dict>
                                  <key>SockPathMode</key>
                                  <integer>438</integer>
                                  <key>SockPathName</key>
                                  <string>/var/run/com.docker.vmnetd.sock</string>
                          </dict>
                  </dict>
                  <key>Version</key>
                  <string>59</string>
          </dict>
          EOF
          
          sudo /bin/chmod 544 /Library/PrivilegedHelperTools/com.docker.vmnetd
          sudo /bin/chmod 644 /Library/LaunchDaemons/com.docker.vmnetd.plist
          sudo /bin/launchctl load /Library/LaunchDaemons/com.docker.vmnetd.plist
          
          echo "-- Starting Docker.app..."
          
          open -g -a Docker.app
          
          i=0
          while ! docker system info &>/dev/null; do
            (( i++ == 0 )) && printf %s '-- Waiting for Docker to finish starting up...' || printf '.'
            sleep 10
          done
          (( i )) && printf '\n'

          echo "-- Docker is ready."
          
     # - name: upterm
     #   if: startsWith(matrix.os, 'macos')
     #   uses: lhotari/action-upterm@v1
        
      - name: Run a multi-line script
        run: |
          echo "Hello `uname -a`"
          docker ps
